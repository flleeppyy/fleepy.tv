<!DOCTYPE html>
<html lang="en">
  <head>
    <script
      async
      src="https://arc.io/widget.min.js#rYxxjvEb"
      crossorigin="anonymous"
    ></script>
    <script defer data-domain="fleepy.tv" src="https://plausible.liliana.digital/js/script.js"></script>
    <title><%~ it.title %></title>
    <%~ includeFile("../partials/metadata.ejs", { title: it.title || "Fleepy.tv", description:
    it.description || "Music producer, software developer and sysadmin.", }) %>
    <style>
      @font-face {
        font-family: "UniFont";
        src: url("/fonts/unifont.ttf");
      }
    </style>
  </head>
  <body>
    <%~ it.body %>
    <script src="/js/logger.js?<%= E.globalConstants.fakeHash%>"></script>
    <script src="/js/main.js?<%= E.globalConstants.fakeHash%>"></script>
    <script>
      function rgbToHsl(rgb) {
        const r = rgb[0] / 255;
        const g = rgb[1] / 255;
        const b = rgb[2] / 255;

        const max = Math.max(r, g, b);
        const min = Math.min(r, g, b);
        let h =
          (max + min) / 2;
        let s =
          (max + min) / 2;
        let l =
          (max + min) / 2;

        if (max === min) {
          h = 0;
          s = 0;
        } else {
          const d = max - min;
          s = l > 0.5 ? d / (2 - max - min) : d / (max + min);

          switch (max) {
            case r:
              h = (g - b) / d + (g < b ? 6 : 0);
              break;
            case g:
              h = (b - r) / d + 2;
              break;
            case b:
              h = (r - g) / d + 4;
              break;
          }

          h /= 6;
        }

        return [h, s, l];
      }
      function hslToRgb(hsl) {
        const h = hsl[0];
        const s = hsl[1];
        const l = hsl[2];

        let r;
        let g;
        let b;

        if (s === 0) {
          r = g = b = l; // achromatic
        } else {
          const hue2rgb = (p, q, t) => {
            if (t < 0) t += 1;
            if (t > 1) t -= 1;
            if (t < 1 / 6) return p + (q - p) * 6 * t;
            if (t < 1 / 2) return q;
            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
            return p;
          };

          const q = l < 0.5 ? l * (1 + s) : l + s - l * s;
          const p = 2 * l - q;

          r = hue2rgb(p, q, h + 1 / 3);
          g = hue2rgb(p, q, h);
          b = hue2rgb(p, q, h - 1 / 3);
        }

        return [r * 255, g * 255, b * 255];
      }
   </script>

<script>
  window.shiftBackgroundHue = false;
  setInterval(() => {
    if (window.shiftBackgroundHue) {
      // add 5 to the backgrounds hue
      let rgb = window.getComputedStyle(document.body).getPropertyValue("background-color");
      // rgb regex string
      rgb = /rgb\((\d+),\s(\d+),\s(\d+)\)/.exec(window.getComputedStyle(document.body).getPropertyValue("background-color")).slice(1);
      let hsl = rgbToHsl(rgb);
      hsl[0] += 0.05;
      hsl[0] = hsl[0] % 1;
      rgb = hslToRgb(hsl);
      document.body.style.backgroundColor = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;
    }
  }, 250);
</script>
  </body>
</html>
